name: "CI&CD"

on:
  #  workflow_dispatch:
  push:
    branches: [ feat/ci-cd ]
#  pull_request:
#    branches: [ master, feat/ci-cd ]

#jobs:
#  info:
#    name: 작업 정보
#    runs-on: ubuntu-latest
#    steps:
#      - name: 작업 정보
#        run: |
#          echo "🎉🎉🎉🎉🎉🎉🎉"
#          echo "repo : ${{ github.repository }}"
#          echo "branch : ${{ github.ref }}"
#          echo "event : << ${{ github.event_name }} >>"
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      # 서울 시간으로 셋팅
#      - name: Set Time Zone
#        run: sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
#      - uses: actions/checkout@v3
#      # JDK Settings
#      #      - name: Setup JDK1.8...
#      #        uses: actions/setup-java@v3
#      #        with:
#      #          java-version: 1.8
#      #          check-latest: true
#      - name: Setup JDK11...
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#          check-latest: true
#
#      - name: Setup Android SDK
#        uses: android-actions/setup-android@v2
#
#      - name: Setup Gradle
#        uses: gradle/gradle-build-action@v2
#      #      - name: Setup Gradle
#      #        uses: gradle/gradle-build-action@v2.3.3
#      #        with:
#      #          gradle-version: 7.1.3
#
#      # cache ( gradle 빌드 시간 단축 )
#      - name: cache gradle
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#        #      - name: Run... (debug)
#        #        run: bash ./gradlew assembleDebug
#        #      - name: Run... (release)
#        #        run: bash ./gradlew assembleRelease --stacktrace
#
#        # lint ( datekt 로 대체 )
#        #      - name: Check lint
#        #        run: ./gradlew lint
#
#        # detekt ( 정적 분석기 )
#        #      - name: detekt...
#        #        run: ./gradlew detekt
#        #      - name: upload detekt result
#        #        uses: actions/upload-artifact@v1
#        #        with:
#        #          name: detekt_result
#        #          path: app/build/reports/detekt
#
#        # checkstyle
#        #      - name: check style...
#        #        run: ./gradlew checkstyle
#        #      - name: upload checkstyle result
#        #        uses: actions/upload-artifact@v1
#        #        with:
#        #          name: checkstyle_result
#        #          path: app/build/reports/checkstyle
#
#        # 유닛테스트
#      #      - name: Run Unit Tests
#      #        run: ./gradlew testDebugUnitTest
#
#      # 권한 추가
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      # build
#      - name: Build..
#        id: build
#        run: ./gradlew build
#
#      # clean + build
#      #      - name: Build with Gradle
#      #        run: ./gradlew clean assembleRelease
#
#      # keystore
#      - name : Generate keystore file from github secrets
#      - run : |
#          echo "$KEYSTORE" > ./
#
#      # debug apk
##       - name: Build Debug APK
##         run: bash ./gradlew assembleDebug
##       - name: Upload APK ( Debug )
##         uses: actions/upload-artifact@v1
##         with:
##           name: apk
##           path: app/build/outputs/apk/debug/app-debug.apk
#
#      # release apk
#      # - name: Download APK from build
#      #   uses: actions/download-artifact@v1
#      #   with:
#      #     name: apk
#      # - name: Create Release
#      #   id: create_release
#      #   uses: actions/create-release@v1
#      #   env:
#      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      #   with:
#      #     tag_name: ${{ github.ref }}
#      #     release_name: Release ${{ github.ref }}
#      # - name: Upload Release APK
#      #   id: upload_release_asset
#      #   uses: actions/upload-release-asset@v1.0.1
#      #   env:
#      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      #   with:
#      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
#      #     asset_path: apk/app-debug.apk
#      #     asset_name: HeathportKiosk.apk
#      #     asset_content_type: application/zip
#
#      # - name: Build Release AAB
#      #   id: buildRelease
#      #   run: ./gradlew bundleRelease
#
#      # - name: Sign AAB
#      #   id: sign
#      #   uses: r0adkll/sign-android-release@v1
#      #   with:
#      #     releaseDirectory: app/build/outputs/apk/release
#      #     signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#      #     alias: ${{ secrets.ALIAS }}
#      #     keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#      #     keyPassword: ${{ secrets.KEY_PASSWORD }}
#
#      # - name: Upload AAB
#      #   id: uploadArtifact
#      #   uses: actions/upload-artifact@v1
#      #   with:
#      #     name: app
#      #     path: app/build/outputs/bundle/release/app-release.aab
